// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NewTemplateSyncForm should render for export settings 1`] = `
<Form
  disabled={false}
  errorTitle="Warning! "
  onCancel={[Function]}
  submitting={false}
>
  <SyncTypeRadios
    controlLabel="Action type"
    disabled={false}
    name="syncType"
    radios={
      Array [
        Object {
          "checked": true,
          "label": "Export",
          "onChange": [Function],
          "permission": "export",
          "value": "export",
        },
      ]
    }
  />
  <SyncSettingsFields
    disabled={false}
    exportSettings={
      Array [
        Object {
          "description": "Import or export names matching this regex (case-insensitive; snippets are not filtered)",
          "id": 47,
          "name": "filter",
          "settingsType": "string",
          "value": "",
        },
        Object {
          "description": "Negate the filter for import/export",
          "id": 48,
          "name": "negate",
          "settingsType": "bool",
          "value": false,
        },
        Object {
          "description": "Target path to import and export. Different protocols can be used, for example /tmp/dir, git://example.com, https://example.com, ssh://example.com. When exporting to /tmp, note that production deployments may be configured to use private tmp.",
          "id": 49,
          "name": "repo",
          "settingsType": "string",
          "value": "https://github.com/theforeman/community-templates.git",
        },
      ]
    }
    importSettings={
      Array [
        Object {
          "description": "Associate templates to OS, organization and location",
          "id": 45,
          "name": "associate",
          "selection": Array [
            Object {
              "label": "New",
              "value": "new",
            },
            Object {
              "label": "Never",
              "value": "never",
            },
            Object {
              "label": "Always",
              "value": "always",
            },
          ],
          "settingsType": "string",
          "value": "new",
        },
        Object {
          "description": "Should importing overwrite locked templates?",
          "id": 46,
          "name": "force",
          "settingsType": "bool",
          "value": false,
        },
      ]
    }
    resetField={[Function]}
    syncType="export"
    validationData={Object {}}
  />
</Form>
`;

exports[`NewTemplateSyncForm should render when for import settings 1`] = `
<Form
  disabled={false}
  errorTitle="Warning! "
  onCancel={[Function]}
  submitting={false}
>
  <SyncTypeRadios
    controlLabel="Action type"
    disabled={false}
    name="syncType"
    radios={
      Array [
        Object {
          "checked": true,
          "label": "Import",
          "onChange": [Function],
          "permission": "import",
          "value": "import",
        },
        Object {
          "checked": false,
          "label": "Export",
          "onChange": [Function],
          "permission": "export",
          "value": "export",
        },
      ]
    }
  />
  <SyncSettingsFields
    disabled={false}
    exportSettings={
      Array [
        Object {
          "description": "Import or export names matching this regex (case-insensitive; snippets are not filtered)",
          "id": 47,
          "name": "filter",
          "settingsType": "string",
          "value": "",
        },
        Object {
          "description": "Negate the filter for import/export",
          "id": 48,
          "name": "negate",
          "settingsType": "bool",
          "value": false,
        },
        Object {
          "description": "Target path to import and export. Different protocols can be used, for example /tmp/dir, git://example.com, https://example.com, ssh://example.com. When exporting to /tmp, note that production deployments may be configured to use private tmp.",
          "id": 49,
          "name": "repo",
          "settingsType": "string",
          "value": "https://github.com/theforeman/community-templates.git",
        },
      ]
    }
    importSettings={
      Array [
        Object {
          "description": "Associate templates to OS, organization and location",
          "id": 45,
          "name": "associate",
          "selection": Array [
            Object {
              "label": "New",
              "value": "new",
            },
            Object {
              "label": "Never",
              "value": "never",
            },
            Object {
              "label": "Always",
              "value": "always",
            },
          ],
          "settingsType": "string",
          "value": "new",
        },
        Object {
          "description": "Should importing overwrite locked templates?",
          "id": 46,
          "name": "force",
          "settingsType": "bool",
          "value": false,
        },
      ]
    }
    resetField={[Function]}
    syncType="import"
    validationData={Object {}}
  />
</Form>
`;
